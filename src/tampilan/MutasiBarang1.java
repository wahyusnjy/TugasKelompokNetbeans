/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tampilan;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.io.File;
import java.util.HashMap;
import koneksi.koneksi;
import java.text.SimpleDateFormat;
import java.util.Date;

public class MutasiBarang1 extends javax.swing.JPanel {

    private Connection conn;
    private DefaultTableModel tabmode;

    public MutasiBarang1() {
        initComponents();
        conn = new koneksi().connect();
        datatable();
        isiComboBox(kdbarang, "kode_barang", "mutasi_barang", "-- Pilih Kode Barang --");
        isiComboBox(darlok, "dari_lokasi", "mutasi_barang", "-- Pilih Lokasi Asal --");
        isiComboBox(kelok, "ke_lokasi", "mutasi_barang", "-- Pilih Lokasi Tujuan --");

    }

    private void kosong() {
        idm.setText("");
        tgl.setDate(null);
        kdbarang.setSelectedIndex(0);
        darlok.setSelectedIndex(0);
        kelok.setSelectedIndex(0);

        jml.setValue(0);
    }
    
    private void isiComboBox(JComboBox<String> combo, String kolom, String tabel, String labelAwal) {
    try {
        String sql = "SELECT DISTINCT " + kolom + " FROM " + tabel;
        PreparedStatement stat = conn.prepareStatement(sql);
        ResultSet rs = stat.executeQuery();

        combo.removeAllItems(); // Kosongkan isi combobox dulu
        combo.addItem(labelAwal); // Tambahkan label awal seperti "-- Pilih Kode Barang --"

        while (rs.next()) {
            combo.addItem(rs.getString(kolom));
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Gagal ambil data dari " + kolom + ": " + e.getMessage());
    }
}

    
    private void datatable() {
        Object[] Baris = {"ID Mutasi", "Tanggal", "Kode Barang", "Dari Lokasi", "Ke Lokasi", "Jumlah"};
        tabmode = new DefaultTableModel(null, Baris);
        tblmutasi.setModel(tabmode);

        String sql = "SELECT * FROM mutasi_barang";
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(sql);
            while (hasil.next()) {
                String a = hasil.getString("id_mutasi");
                String b = hasil.getString("tanggal");
                String c = hasil.getString("kode_barang");
                String d = hasil.getString("dari_lokasi");
                String e = hasil.getString("ke_lokasi");
                String f = hasil.getString("jumlah");

                String[] data = {a, b, c, d, e, f};
                tabmode.addRow(data);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Gagal Tampil Data: " + e.getMessage());
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelMutasiBrng = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        idm = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        update = new javax.swing.JButton();
        create = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblmutasi = new javax.swing.JTable();
        tgl = new com.toedter.calendar.JDateChooser();
        kdbarang = new javax.swing.JComboBox<>();
        darlok = new javax.swing.JComboBox<>();
        kelok = new javax.swing.JComboBox<>();
        jml = new javax.swing.JSpinner();

        setLayout(new java.awt.BorderLayout());

        PanelMutasiBrng.setMaximumSize(new java.awt.Dimension(524, 554));
        PanelMutasiBrng.setMinimumSize(new java.awt.Dimension(524, 554));
        PanelMutasiBrng.setPreferredSize(new java.awt.Dimension(524, 554));

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Mutasi Barang");

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel3.setText("ID Mutasi");

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel4.setText("Tanggal");

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel5.setText("Kode Barang");

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel6.setText("Dari Lokasi");

        jLabel7.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel7.setText("Ke Lokasi");

        jLabel8.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel8.setText("Jumlah");

        update.setText("Update Data");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        create.setText("Create Data");
        create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createActionPerformed(evt);
            }
        });

        tblmutasi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID Mutasi", "Tanggal", "Kode Barang", "Dari Lokasi", "Ke Lokasi", "Jumlah"
            }
        ));
        tblmutasi.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblmutasi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblmutasiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblmutasi);

        kdbarang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        darlok.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        kelok.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout PanelMutasiBrngLayout = new javax.swing.GroupLayout(PanelMutasiBrng);
        PanelMutasiBrng.setLayout(PanelMutasiBrngLayout);
        PanelMutasiBrngLayout.setHorizontalGroup(
            PanelMutasiBrngLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelMutasiBrngLayout.createSequentialGroup()
                .addGroup(PanelMutasiBrngLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelMutasiBrngLayout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(update)
                        .addGap(32, 32, 32)
                        .addComponent(create))
                    .addGroup(PanelMutasiBrngLayout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(PanelMutasiBrngLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(51, 51, 51)
                        .addGroup(PanelMutasiBrngLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tgl, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                            .addComponent(kdbarang, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(darlok, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(kelok, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jml, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idm)))
                    .addGroup(PanelMutasiBrngLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(44, Short.MAX_VALUE))
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        PanelMutasiBrngLayout.setVerticalGroup(
            PanelMutasiBrngLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelMutasiBrngLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(PanelMutasiBrngLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(PanelMutasiBrngLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(tgl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelMutasiBrngLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(kdbarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelMutasiBrngLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(darlok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelMutasiBrngLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(kelok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelMutasiBrngLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jml, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(PanelMutasiBrngLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(update)
                    .addComponent(create))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(5, Short.MAX_VALUE))
        );

        add(PanelMutasiBrng, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        if (kdbarang.getSelectedIndex() == 0 ||
        darlok.getSelectedIndex() == 0 ||
        kelok.getSelectedIndex() == 0) {
        JOptionPane.showMessageDialog(null, "Silakan pilih semua pilihan ComboBox terlebih dahulu.");
        return;
    }
        String sql = "UPDATE mutasi_barang SET tanggal = ?, kode_barang = ?, dari_lokasi = ?, ke_lokasi = ?, jumlah = ? WHERE id_mutasi = ?";
        try {
        PreparedStatement stat = conn.prepareStatement(sql);
        java.util.Date utilDate = tgl.getDate();
        if (utilDate == null) {
            JOptionPane.showMessageDialog(null, "Tanggal belum diisi");
            return;
        }
        java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());

        stat.setDate(1, sqlDate);
        stat.setString(2, kdbarang.getSelectedItem().toString());
        stat.setString(3, darlok.getSelectedItem().toString());
        stat.setString(4, kelok.getSelectedItem().toString());
        stat.setString(5, jml.getValue().toString());
        stat.setString(6, idm.getText()); // untuk WHERE id_mutasi

        stat.executeUpdate();
        JOptionPane.showMessageDialog(null, "Data Berhasil Diupdate");
        kosong();
        idm.requestFocus();
        datatable();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Data Gagal Diupdate: " + e.getMessage());
    }   // TODO add your handling code here:
    }//GEN-LAST:event_updateActionPerformed

    private void createActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createActionPerformed
        if (kdbarang.getSelectedIndex() == 0 ||
        darlok.getSelectedIndex() == 0 ||
        kelok.getSelectedIndex() == 0) {
        JOptionPane.showMessageDialog(null, "Silakan pilih semua pilihan ComboBox terlebih dahulu.");
        return;
    }
        String sql = "INSERT INTO mutasi_barang (id_mutasi, tanggal, kode_barang, dari_lokasi, ke_lokasi, jumlah) VALUES (?, ?, ?, ?, ?, ?)";
    try {
        PreparedStatement stat = conn.prepareStatement(sql);
        java.util.Date utilDate = tgl.getDate();
        if (utilDate == null) {
            JOptionPane.showMessageDialog(null, "Tanggal belum diisi");
            return;
        }
        java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());

        stat.setString(1, idm.getText());
        stat.setDate(2, sqlDate);
        stat.setString(3, kdbarang.getSelectedItem().toString());
        stat.setString(4, darlok.getSelectedItem().toString());
        stat.setString(5, kelok.getSelectedItem().toString());
        stat.setString(6, jml.getValue().toString());

        stat.executeUpdate();
        JOptionPane.showMessageDialog(null, "Data Berhasil Disimpan");
        kosong();
        idm.requestFocus();
        datatable();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Data Gagal Disimpan " + e.getMessage());
    } // TODO add your handling code here:
    }//GEN-LAST:event_createActionPerformed

    private void tblmutasiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblmutasiMouseClicked
        int bar = tblmutasi.getSelectedRow();
    String a = tabmode.getValueAt(bar, 0).toString();
    String b = tabmode.getValueAt(bar, 1).toString(); // tanggal dalam format "yyyy-MM-dd"
    String c = tabmode.getValueAt(bar, 2).toString();
    String d = tabmode.getValueAt(bar, 3).toString();
    String e = tabmode.getValueAt(bar, 4).toString();
    String f = tabmode.getValueAt(bar, 5).toString();

    idm.setText(a);
    
    try {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        Date date = sdf.parse(b);  // parsing string ke java.util.Date
        tgl.setDate(date);         // set ke JDateChooser
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(null, "Format tanggal salah: " + ex.getMessage());
    }

    kdbarang.setSelectedItem(c);
    darlok.setSelectedItem(d);
    kelok.setSelectedItem(e);
    try {
        int jumlahStock = Integer.parseInt(f);
        jml.setValue(jumlahStock);
    } catch (NumberFormatException ex) {
        jml.setValue(0); // fallback ke 0 jika parsing gagal
        JOptionPane.showMessageDialog(this, "Data stock tidak valid: " + f, "Kesalahan", JOptionPane.ERROR_MESSAGE);
    }

        // TODO add your handling code here:
    }//GEN-LAST:event_tblmutasiMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelMutasiBrng;
    private javax.swing.JButton create;
    private javax.swing.JComboBox<String> darlok;
    private javax.swing.JTextField idm;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jml;
    private javax.swing.JComboBox<String> kdbarang;
    private javax.swing.JComboBox<String> kelok;
    private javax.swing.JTable tblmutasi;
    private com.toedter.calendar.JDateChooser tgl;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
