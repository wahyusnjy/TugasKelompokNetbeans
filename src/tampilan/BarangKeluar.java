package tampilan;

import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import koneksi.koneksi;
import java.text.SimpleDateFormat;
import java.util.Date; 

public class BarangKeluar extends javax.swing.JPanel {
    private Connection conn;
    private DefaultTableModel tabmode;
    
    public BarangKeluar() {
        initComponents();
        conn = new koneksi().connect();
        datatable();
        isiComboBoxKodeBarang();
    }
    
    private void kosong() {
        txtNotrx.setText("");
        tgl.setDate(null);
        kdbarang.setSelectedIndex(0);
        jml.setValue(0);
        txtTujuan.setText("");
    }

    private void isiComboBoxKodeBarang() {
        try {
            String sql = "SELECT kode_barang FROM barang";
            PreparedStatement stat = conn.prepareStatement(sql);
            ResultSet rs = stat.executeQuery();

            kdbarang.removeAllItems();
            kdbarang.addItem("-- Pilih Kode Barang --");

            while (rs.next()) {
                kdbarang.addItem(rs.getString("kode_barang"));
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Gagal ambil data kode barang: " + e.getMessage());
        }
    }

    private void datatable() {
        Object[] Baris = {"No. Transaksi", "Tanggal", "Kode Barang", "Jumlah", "Tujuan"};
        tabmode = new DefaultTableModel(null, Baris);
        tblBrngKeluar.setModel(tabmode);

        String sql = "SELECT * FROM barang_keluar";
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(sql);
            while (hasil.next()) {
                String a = hasil.getString("no_transaksi");
                String b = hasil.getString("tanggal");
                String c = hasil.getString("kode_barang");
                String d = hasil.getString("jumlah");
                String e = hasil.getString("tujuan");

                String[] data = {a, b, c, d, e};
                tabmode.addRow(data);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Gagal Tampil Data: " + e.getMessage());
        }
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lTgl = new javax.swing.JLabel();
        lBarang = new javax.swing.JLabel();
        lJml = new javax.swing.JLabel();
        lTujuan = new javax.swing.JLabel();
        txtTujuan = new javax.swing.JTextField();
        lNotrx = new javax.swing.JLabel();
        txtNotrx = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBrngKeluar = new javax.swing.JTable();
        tgl = new com.toedter.calendar.JDateChooser();
        jml = new javax.swing.JSpinner();
        kdbarang = new javax.swing.JComboBox<>();
        bcreate = new javax.swing.JButton();
        bupdate = new javax.swing.JButton();
        bdelete = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Barang Keluar");

        lTgl.setText("Tanggal");

        lBarang.setText("Kode Barang");

        lJml.setText("Jumlah");

        lTujuan.setText("Tujuan");

        lNotrx.setText("No. Transaksi");

        tblBrngKeluar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "No. Transaksi", "Tanggal", "Kode Barang", "Jumlah", "Tujuan"
            }
        ));
        jScrollPane1.setViewportView(tblBrngKeluar);

        kdbarang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        bcreate.setText("Tambah");
        bcreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bcreateActionPerformed(evt);
            }
        });

        bupdate.setText("Edit");
        bupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bupdateActionPerformed(evt);
            }
        });

        bdelete.setText("Hapus");
        bdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bdeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(102, 102, 102))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(bcreate)
                        .addGap(52, 52, 52)
                        .addComponent(bupdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bdelete))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lNotrx)
                            .addComponent(lTgl, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lBarang)
                            .addComponent(lTujuan)
                            .addComponent(lJml))
                        .addGap(63, 63, 63)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jml, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNotrx)
                            .addComponent(tgl, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                            .addComponent(kdbarang, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtTujuan))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lNotrx, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNotrx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lTgl)
                    .addComponent(tgl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lBarang)
                    .addComponent(kdbarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lJml)
                    .addComponent(jml, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTujuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lTujuan))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bcreate)
                    .addComponent(bupdate)
                    .addComponent(bdelete))
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 3, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bcreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bcreateActionPerformed
        if (kdbarang.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Silakan pilih kode barang terlebih dahulu.");
            return;
        }
        
        if (txtTujuan.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Tujuan harus diisi.");
            return;
        }

        String sql = "INSERT INTO barang_keluar (no_transaksi, tanggal, kode_barang, jumlah, tujuan) VALUES (?, ?, ?, ?, ?)";
        try {
            PreparedStatement stat = conn.prepareStatement(sql);
            
            // Format tanggal ke yyyy-MM-dd
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String tanggal = tgl.getDate() != null ? sdf.format(tgl.getDate()) : sdf.format(new Date());

            stat.setString(1, txtNotrx.getText());
            stat.setString(2, tanggal);
            stat.setString(3, kdbarang.getSelectedItem().toString());
            stat.setString(4, jml.getValue().toString());
            stat.setString(5, txtTujuan.getText());

            stat.executeUpdate();
            JOptionPane.showMessageDialog(null, "Data Barang Keluar Berhasil Disimpan");
            kosong();
            txtNotrx.requestFocus();
            datatable();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Data Gagal Disimpan: " + e.getMessage());
        } // TODO add your handling code here:
    }//GEN-LAST:event_bcreateActionPerformed

    private void bupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bupdateActionPerformed
        int selectedRow = tblBrngKeluar.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Pilih data yang akan diupdate terlebih dahulu.");
            return;
        }

        String sql = "UPDATE barang_keluar SET tanggal=?, kode_barang=?, jumlah=?, tujuan=? WHERE no_transaksi=?";
        try {
            PreparedStatement stat = conn.prepareStatement(sql);
            
            // Format tanggal ke yyyy-MM-dd
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String tanggal = tgl.getDate() != null ? sdf.format(tgl.getDate()) : sdf.format(new Date());

            stat.setString(1, tanggal);
            stat.setString(2, kdbarang.getSelectedItem().toString());
            stat.setString(3, jml.getValue().toString());
            stat.setString(4, txtTujuan.getText());
            stat.setString(5, txtNotrx.getText());

            stat.executeUpdate();
            JOptionPane.showMessageDialog(null, "Data Berhasil Diupdate");
            kosong();
            datatable();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Data Gagal Diupdate: " + e.getMessage());
        }   // TODO add your handling code here:
    }//GEN-LAST:event_bupdateActionPerformed

    private void bdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bdeleteActionPerformed
        int selectedRow = tblBrngKeluar.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Pilih data yang akan dihapus terlebih dahulu.");
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(null, 
            "Apakah Anda yakin ingin menghapus data ini?", "Konfirmasi Hapus", 
            JOptionPane.YES_NO_OPTION);
        
        if (confirm == JOptionPane.YES_OPTION) {
            String noTransaksi = tabmode.getValueAt(selectedRow, 0).toString();
            String sql = "DELETE FROM barang_keluar WHERE no_transaksi = ?";
            try {
                PreparedStatement stat = conn.prepareStatement(sql);
                stat.setString(1, noTransaksi);
                stat.executeUpdate();
                JOptionPane.showMessageDialog(null, "Data Berhasil Dihapus");
                kosong();
                datatable();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Data Gagal Dihapus: " + e.getMessage());
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_bdeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bcreate;
    private javax.swing.JButton bdelete;
    private javax.swing.JButton bupdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jml;
    private javax.swing.JComboBox<String> kdbarang;
    private javax.swing.JLabel lBarang;
    private javax.swing.JLabel lJml;
    private javax.swing.JLabel lNotrx;
    private javax.swing.JLabel lTgl;
    private javax.swing.JLabel lTujuan;
    private javax.swing.JTable tblBrngKeluar;
    private com.toedter.calendar.JDateChooser tgl;
    private javax.swing.JTextField txtNotrx;
    private javax.swing.JTextField txtTujuan;
    // End of variables declaration//GEN-END:variables
}
