/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tampilan;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import koneksi.koneksi;

public class DataBarang extends javax.swing.JPanel {

    private Connection conn;
    private DefaultTableModel tabmode;

    public DataBarang() {
        initComponents();
        conn = new koneksi().connect();
        datatable();
        isiComboBox(InputKodeBarang, "kode_barang", "barang", "-- Pilih Kode Barang --");
        isiComboBox(InputKategori, "kode_kategori", "kategori", "-- Pilih Lokasi Asal --");
        isiComboBox(InputLokasi, "kode_lokasi", "lokasi", "-- Pilih Kategori --");

    }

    private void kosong() {
        InputIDBarang.setText("");
        InputNamaBarang.setText("");
        InputKodeBarang.setSelectedIndex(0);
        InputKategori.setSelectedIndex(0);
        InputLokasi.setSelectedIndex(0);

        InputStockBarang.setValue(0);
    }
    
    private void isiComboBox(JComboBox<String> combo, String kolom, String tabel, String labelAwal) {
    try {
        String sql = "SELECT DISTINCT " + kolom + " FROM " + tabel;
        PreparedStatement stat = conn.prepareStatement(sql);
        ResultSet rs = stat.executeQuery();

        combo.removeAllItems(); // Kosongkan isi combobox dulu
        combo.addItem(labelAwal); // Tambahkan label awal seperti "-- Pilih Kode Barang --"

        while (rs.next()) {
            combo.addItem(rs.getString(kolom));
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Gagal ambil data dari " + kolom + ": " + e.getMessage());
    }
}

    
    private void datatable() {
        Object[] Baris = {"ID", "Kode Barang", "Nama Barang", "Kode Kategori", "Kode Lokasi", "Stok", "Harga"};
        tabmode = new DefaultTableModel(null, Baris);
        tblbarang.setModel(tabmode);

        String sql = "SELECT * FROM barang";
        try {
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(sql);
            while (hasil.next()) {
                String a = hasil.getString("id");
                String b = hasil.getString("kode_barang");
                String c = hasil.getString("nama_barang");
                String d = hasil.getString("kode_kategori");
                String e = hasil.getString("kode_lokasi");
                String f = hasil.getString("stok");
                String g = hasil.getString("harga");
                
                String[] data = {a, b, c, d, e, f, g};
                tabmode.addRow(data);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Gagal Tampil Data: " + e.getMessage());
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelMutasiBrng = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        InputIDBarang = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        update = new javax.swing.JButton();
        create = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblbarang = new javax.swing.JTable();
        InputKodeBarang = new javax.swing.JComboBox<>();
        InputKategori = new javax.swing.JComboBox<>();
        InputLokasi = new javax.swing.JComboBox<>();
        InputStockBarang = new javax.swing.JSpinner();
        Hapus = new javax.swing.JButton();
        InputNamaBarang = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        InputHargaBarang = new javax.swing.JTextField();

        setLayout(new java.awt.BorderLayout());

        PanelMutasiBrng.setMaximumSize(new java.awt.Dimension(524, 554));
        PanelMutasiBrng.setMinimumSize(new java.awt.Dimension(524, 554));
        PanelMutasiBrng.setPreferredSize(new java.awt.Dimension(524, 554));

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Data Barang");

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel3.setText("ID");

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel4.setText("Nama Barang");

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel5.setText("Kode Barang");

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel6.setText("Kode Kategori");

        jLabel7.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel7.setText("Kode Lokasi");

        jLabel8.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel8.setText("Stok");

        update.setText("Edit");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        create.setText("Tambah");
        create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createActionPerformed(evt);
            }
        });

        tblbarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Kode Barang", "Nama Barang", "Kode Kategori", "Kode Lokasi", "Stok", "Harga"
            }
        ));
        tblbarang.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblbarang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblbarangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblbarang);

        InputKodeBarang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        InputKategori.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        InputLokasi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        Hapus.setText("Hapus");
        Hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HapusActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel9.setText("Harga");

        javax.swing.GroupLayout PanelMutasiBrngLayout = new javax.swing.GroupLayout(PanelMutasiBrng);
        PanelMutasiBrng.setLayout(PanelMutasiBrngLayout);
        PanelMutasiBrngLayout.setHorizontalGroup(
            PanelMutasiBrngLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 557, Short.MAX_VALUE)
            .addGroup(PanelMutasiBrngLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(PanelMutasiBrngLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelMutasiBrngLayout.createSequentialGroup()
                        .addComponent(create)
                        .addGap(49, 49, 49)
                        .addComponent(update)
                        .addGap(41, 41, 41)
                        .addComponent(Hapus))
                    .addGroup(PanelMutasiBrngLayout.createSequentialGroup()
                        .addGroup(PanelMutasiBrngLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel5))
                        .addGap(51, 51, 51)
                        .addGroup(PanelMutasiBrngLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(PanelMutasiBrngLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(InputIDBarang, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                                .addComponent(InputKategori, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(InputLokasi, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(InputStockBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(InputNamaBarang)
                                .addComponent(InputHargaBarang))
                            .addComponent(InputKodeBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelMutasiBrngLayout.setVerticalGroup(
            PanelMutasiBrngLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelMutasiBrngLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(PanelMutasiBrngLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InputIDBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(PanelMutasiBrngLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InputKodeBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(PanelMutasiBrngLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelMutasiBrngLayout.createSequentialGroup()
                        .addComponent(InputNamaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(PanelMutasiBrngLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(InputKategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(PanelMutasiBrngLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(InputLokasi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(PanelMutasiBrngLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(InputStockBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(PanelMutasiBrngLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(InputHargaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addGroup(PanelMutasiBrngLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(create)
                            .addComponent(update)
                            .addComponent(Hapus))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))
                    .addGroup(PanelMutasiBrngLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        add(PanelMutasiBrng, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        if (InputKodeBarang.getSelectedIndex() == 0 ||
        InputKategori.getSelectedIndex() == 0 ||
        InputLokasi.getSelectedIndex() == 0) {
        JOptionPane.showMessageDialog(null, "Silakan pilih semua pilihan ComboBox terlebih dahulu.");
        return;
    }
        String sql = "UPDATE barang SET kode_barang = ?, nama_barang = ?, kode_kategori = ?, kode_lokasi = ?, stok = ?, harga = ? WHERE id = ?";
        try {
        PreparedStatement stat = conn.prepareStatement(sql);
        
        stat.setString(1, InputKodeBarang.getSelectedItem().toString());
        stat.setString(2, InputNamaBarang.getText());
        stat.setString(3, InputKategori.getSelectedItem().toString());
        stat.setString(4, InputLokasi.getSelectedItem().toString());
        stat.setString(5, InputStockBarang.getValue().toString());
        stat.setString(6, InputHargaBarang.getText());
        stat.setString(7, InputIDBarang.getText()); // untuk WHERE id_mutasi

        stat.executeUpdate();
        JOptionPane.showMessageDialog(null, "Data Berhasil Diupdate");
        kosong();
        InputIDBarang.requestFocus();
        datatable();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Data Gagal Diupdate: " + e.getMessage());
    }   // TODO add your handling code here:
    }//GEN-LAST:event_updateActionPerformed

    private void createActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createActionPerformed
        if (InputKodeBarang.getSelectedIndex() == 0 ||
        InputKategori.getSelectedIndex() == 0 ||
        InputLokasi.getSelectedIndex() == 0) {
        JOptionPane.showMessageDialog(null, "Silakan pilih semua pilihan ComboBox terlebih dahulu.");
        return;
    }
        String sql = "INSERT INTO barang (id, kode_barang , nama_barang , kode_kategori , kode_lokasi , stok , harga ) VALUES (?, ?, ?, ?, ?, ?, ?)";
    try {
        PreparedStatement stat = conn.prepareStatement(sql);
        
        stat.setString(1, InputIDBarang.getText());
        stat.setString(2, InputKodeBarang.getSelectedItem().toString());
        stat.setString(3, InputNamaBarang.getText());
        stat.setString(4, InputKategori.getSelectedItem().toString());
        stat.setString(5, InputLokasi.getSelectedItem().toString());
        stat.setString(6, InputStockBarang.getValue().toString());
        stat.setString(7, InputHargaBarang.getText());

        stat.executeUpdate();
        JOptionPane.showMessageDialog(null, "Data Berhasil Disimpan");
        kosong();
        InputIDBarang.requestFocus();
        datatable();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Data Gagal Disimpan " + e.getMessage());
    } // TODO add your handling code here:
    }//GEN-LAST:event_createActionPerformed

    private void tblbarangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblbarangMouseClicked
        int bar = tblbarang.getSelectedRow();
    String a = tabmode.getValueAt(bar, 0).toString();
    String b = tabmode.getValueAt(bar, 1).toString();
    String c = tabmode.getValueAt(bar, 2).toString();
    String d = tabmode.getValueAt(bar, 3).toString();
    String e = tabmode.getValueAt(bar, 4).toString();
    String f = tabmode.getValueAt(bar, 5).toString();
    String g = tabmode.getValueAt(bar, 6).toString();

    InputIDBarang.setText(a);
    InputKodeBarang.setSelectedItem(b);
    InputNamaBarang.setText(c);
    InputKategori.setSelectedItem(d);
    InputLokasi.setSelectedItem(e);
    try {
        int jumlahStock = Integer.parseInt(f);
        InputStockBarang.setValue(jumlahStock);
    } catch (NumberFormatException ex) {
        InputStockBarang.setValue(0); // fallback ke 0 jika parsing gagal
        JOptionPane.showMessageDialog(this, "Data stock tidak valid: " + f, "Kesalahan", JOptionPane.ERROR_MESSAGE);
    }
    InputHargaBarang.setText(g);

        // TODO add your handling code here:
    }//GEN-LAST:event_tblbarangMouseClicked

    private void HapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HapusActionPerformed
    int ok = JOptionPane.showConfirmDialog(null, "hapus", "Konfirmasi Dialog", JOptionPane.YES_NO_CANCEL_OPTION);
if (ok == 0) {
    String disableFK = "SET FOREIGN_KEY_CHECKS=0";
    String enableFK = "SET FOREIGN_KEY_CHECKS=1";
    String sql = "DELETE FROM barang WHERE id = '" + InputIDBarang.getText() + "'";
    try {
        Statement stmt = conn.createStatement();
        stmt.execute(disableFK); // Matikan foreign key check

        PreparedStatement stat = conn.prepareStatement(sql);
        stat.executeUpdate();

        stmt.execute(enableFK); // Aktifkan kembali foreign key check

        JOptionPane.showMessageDialog(null, "Data Berhasil Dihapus");
        kosong();
        InputIDBarang.requestFocus();
        datatable();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Data Gagal Dihapus " + e.getMessage());
    }
}
      // TODO add your handling code here:
    }//GEN-LAST:event_HapusActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Hapus;
    private javax.swing.JTextField InputHargaBarang;
    private javax.swing.JTextField InputIDBarang;
    private javax.swing.JComboBox<String> InputKategori;
    private javax.swing.JComboBox<String> InputKodeBarang;
    private javax.swing.JComboBox<String> InputLokasi;
    private javax.swing.JTextField InputNamaBarang;
    private javax.swing.JSpinner InputStockBarang;
    private javax.swing.JPanel PanelMutasiBrng;
    private javax.swing.JButton create;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblbarang;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
